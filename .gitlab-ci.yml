# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
#
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

####
cache:
  paths:
    - build/
  
stages:
  - build
  - test
  - deploy

services:
  - docker:dind

build-job:
  image: amazoncorretto:17-alpine3.18-jdk # This job runs in the build stage, which runs first.
  stage: build
  script:
    - ./gradlew clean build -x test

test-job:
  image: amazoncorretto:17-alpine3.18-jdk
  stage: test
  script:
    - ./gradlew test

deploy-job:
  stage: deploy
  when: manual
  #only:
  #  - dev
  script:
    - docker login -u $CI_DOCKER_REGISTRY_USERNAME -p $CI_DOCKER_REGISTRY_PASS
    - docker build -f DockerfileJarCi -t $CI_DOCKER_REGISTRY_USERNAME/amparo-api .
    - docker push $CI_DOCKER_REGISTRY_USERNAME/amparo-api

update-container-job:
  stage: deploy
  needs:
    - deploy-job
  script:
    - docker login -u $CI_DOCKER_REGISTRY_USERNAME -p $CI_DOCKER_REGISTRY_PASS
    - docker stop amparo-api || true
    - docker rm amparo-api || true
    - docker pull $CI_DOCKER_REGISTRY_USERNAME/amparo-api
    - docker run -d --network amparo-net --name=amparo-api -p 8080:8080 --env-file ./deploy/application.hlg.env $CI_DOCKER_REGISTRY_USERNAME/amparo-api